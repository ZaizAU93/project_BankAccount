Программа для перевода денег

Описание
Эта программа предназначена для выполнения переводов денег с одного счета на другой.
Она ожидает пользовательский ввод с консоли. Перед запуском программы должен быть
создан файл с номерами счетов и их балансами, расположен в директории "src/check/check.txt".
При выборе функции парсинга, программа будет парсить все подходящие файлы в директории "src/input" 
и перемещать распарсенные файлы в директорию "src/archive".
В результате парсинга программа сгенерирует файл отчет и обновит информацию о номерах счетов и балансах,
и отразит последние изменения, отчет будет находиться в директории "src/report/report.txt".

Технические детали реализации
При запуске программы она ожидает пользовательский ввод в консоли:

Если введено "1", программа будет парсить файлы для перевода из директории "input".
После завершения операции парсинга, нужно в консоль ввести "2", 
программа сформирует отчет переводов и также опеации обработки файлов из директории "src/input".
Программа обрабатывает только файлы в формате txt. Файлы в других форматах игнорируются.

Входные данные:
Файл txt содержащий следующую информацию.
Номер счета отправителя (формат: XXXXX-XXXXX, 10 цифр)
Номер счета получателя (формат: YYYYY-YYYYY, 10 цифр)
Сумма перевода (как целое число так и с дробной частью)
Входные файлы могут содержать дополнительные поля, но программа будет учитывать только указанные выше три поля при обработке.

В дополнение к базовой версии, программа содержит следующую функциональность:

- Возможность получить историю обработанных записей из файла отчета
на основе указанного диапазона дат и времени (от ... до ...).
После предложения программы вывода операции за определенный промежуток времени,
из сформированного файла отчета расположенного в директории "src/report/report.txt"
скопируйте дату и время включая наносекунды точки отсчета (к примеру: 2023-12-30, 23:57:45.8055.80557140045),
а также конечную точку временного интервала. Результат отобразиться в консоли.

- Сохранение результатов парсинга в базе данных. Для успешного сохранения нужно создать
базу данных под названием "root", с именем пользователя "root" и паролем "!12345678q"
а также создать две таблицы в ней, используйте следующий код на языке структурированных запросов, используемый для работы с реляционными базами данных SQL.
(CREATE TABLE IF NOT EXISTS `root`.`operations` (`id` INT AUTO_INCREMENT,   `data` VARCHAR(1000) NULL, `operations` varchar(1000) NULL,  PRIMARY KEY (`id`))ENGINE = InnoDB)
(CREATE TABLE `banckaccount` (`id` int NOT NULL AUTO_INCREMENT, `checkB` varchar(200) DEFAULT NULL, `sum` double DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB)

Для повторного использования программного продукта создайте файлы подходящие по критериям "Входных данных" 
или скопируйте из директории "src/archive" и вставьте"src/input"

В директории "src" расположена UML-диаграмма классов проекта с зависимостями UMLDiagram.png. 